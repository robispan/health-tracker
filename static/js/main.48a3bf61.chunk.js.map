{"version":3,"sources":["components/layout/Logo.png","components/assets/images/strava.jpg","components/assets/images/runkeeper.jpg","context/loading/loadingContext.js","context/strava/stravaContext.js","components/layout/Navbar.js","context/runKeeper/runKeeperContext.js","components/pages/Home/ConnectCard.js","components/pages/Home/Home.js","components/pages/Dashboard/MetricsCard.js","components/pages/Dashboard/Dashboard.js","components/pages/StravaRedirect.js","components/pages/RunKeeperRedirect.js","components/pages/Page404.js","App.js","context/loading/loadingReducer.js","context/types.js","context/loading/LoadingState.js","context/strava/stravaReducer.js","context/strava/StravaState.js","context/runKeeper/runKeeperReducer.js","context/runKeeper/RunKeeperState.js","index.js"],"names":["module","exports","loadingContext","createContext","stravaContext","Header","className","to","process","src","Logo","alt","exact","activeClassName","runKeeperContext","ConnectCard","imageUrl","connected","onConnect","onDisconnect","buttonClasses","push","style","backgroundImage","href","onClick","join","Home","loading","useContext","LoadingContext","StravaContext","stravaData","authStrava","clearStravaData","RunkeeperContext","runKeeperData","authRunKeeper","clearRunKeeperData","StravaImg","RunkeeperImg","MetricsCard","ratio","label","value","text","background","backgroundPadding","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","Dashboard","RunKeeperContext","targetMetrics","weightRatio","weight","Math","round","caloriesRatio","activities","calories","StravaRedirect","location","history","getStravaData","setLoading","stopLoading","useEffect","authCode","URLSearchParams","search","get","a","axios","post","res","data","access_token","sessionStorage","setItem","refresh_token","console","log","fetchData","RunKeeperRedirect","getRunKeeperData","Page404","App","stravaRefreshToken","getItem","refreshStravaAuth","removeItem","basename","Navbar","path","component","state","action","type","LoadingState","props","useReducer","LoadingReducer","dispatch","Provider","children","payload","StravaState","StravaReducer","headers","Authorization","dataRes","window","RunKeeperState","RunKeeperReducer","devices","filter","device","name","connect_url","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48a3bf61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.11bb0a76.png\";","module.exports = __webpack_public_path__ + \"static/media/strava.18940f2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/runkeeper.3e08acc1.jpg\";","import { createContext } from 'react';\r\n\r\nconst loadingContext = createContext();\r\n\r\nexport default loadingContext;\r\n","import { createContext } from 'react';\r\n\r\nconst stravaContext = createContext();\r\n\r\nexport default stravaContext;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Logo from './Logo.png';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<nav className='navbar'>\r\n\t\t\t<div className='navbar-inner'>\r\n\t\t\t\t<NavLink to={`${process.env.PUBLIC_URL}/`} className='navbar-logo'>\r\n\t\t\t\t\t<img src={Logo} className='hide-mobile' alt='logo' />\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink exact={true} activeClassName='active' to={`${process.env.PUBLIC_URL}/`}>\r\n\t\t\t\t\t\t\tHome\r\n            </NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to={`${process.env.PUBLIC_URL}/dashboard`} activeClassName='active'>\r\n\t\t\t\t\t\t\tDashboard\r\n            </NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { createContext } from 'react';\r\n\r\nconst runKeeperContext = createContext();\r\n\r\nexport default runKeeperContext;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ConnectCard = ({ imageUrl, connected, onConnect, onDisconnect }) => {\r\n  // Dynamic style for button\r\n  const buttonClasses = ['connect-card-button'];\r\n  if (connected) buttonClasses.push('connected');\r\n\r\n  return (\r\n    <div className='connect-card'>\r\n      <div\r\n        className='connect-card-image'\r\n        style={{ backgroundImage: `url(${imageUrl})` }}\r\n      ></div>\r\n      <a\r\n        href='#'\r\n        onClick={connected ? onDisconnect : onConnect}\r\n        className={buttonClasses.join(' ')}\r\n      >\r\n        {connected ? 'Disconnect' : 'Connect'}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nConnectCard.propTypes = {\r\n  imageUrl: PropTypes.string.isRequired,\r\n  connected: PropTypes.bool,\r\n  onConnect: PropTypes.func,\r\n  onDisconnect: PropTypes.func\r\n};\r\n\r\nexport default ConnectCard;\r\n","import React, { useContext } from 'react';\r\n\r\nimport LoadingContext from '../../../context/loading/loadingContext';\r\nimport StravaContext from '../../../context/strava/stravaContext';\r\nimport RunkeeperContext from '../../../context/runKeeper/runKeeperContext';\r\n\r\nimport ConnectCard from './ConnectCard';\r\n\r\nimport StravaImg from '../../assets/images/strava.jpg';\r\nimport RunkeeperImg from '../../assets/images/runkeeper.jpg';\r\n\r\nconst Home = () => {\r\n\tconst { loading } = useContext(LoadingContext);\r\n\tconst { stravaData, authStrava, clearStravaData } = useContext(\r\n\t\tStravaContext\r\n\t);\r\n\tconst { runKeeperData, authRunKeeper, clearRunKeeperData } = useContext(\r\n\t\tRunkeeperContext\r\n\t);\r\n\r\n\treturn loading ? (\r\n\t\t'Loading ...'\r\n\t) : (\r\n\t\t\t<div>\r\n\t\t\t\t<h2 className='center upper'>Connect your apps</h2>\r\n\r\n\t\t\t\t<div className='grid'>\r\n\t\t\t\t\t{/* Strava card */}\r\n\t\t\t\t\t<ConnectCard\r\n\t\t\t\t\t\timageUrl={StravaImg}\r\n\t\t\t\t\t\tconnected={stravaData !== null}\r\n\t\t\t\t\t\tonConnect={authStrava}\r\n\t\t\t\t\t\tonDisconnect={clearStravaData}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* Runkeeper card */}\r\n\t\t\t\t\t<ConnectCard\r\n\t\t\t\t\t\timageUrl={RunkeeperImg}\r\n\t\t\t\t\t\tconnected={runKeeperData !== null}\r\n\t\t\t\t\t\tonConnect={authRunKeeper}\r\n\t\t\t\t\t\tonDisconnect={clearRunKeeperData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst MetricsCard = ({ ratio, label }) => {\r\n  return (\r\n    <div className='metrics-card'>\r\n      <h3 className='metrics-card-title center'>{label}</h3>\r\n      {ratio ? (\r\n        <CircularProgressbar\r\n          value={ratio}\r\n          text={`${ratio}%`}\r\n          background\r\n          backgroundPadding={6}\r\n          styles={buildStyles({\r\n            backgroundColor: '#00b9bb',\r\n            textColor: '#fff',\r\n            pathColor: '#fff',\r\n            trailColor: 'transparent'\r\n          })}\r\n        />\r\n      ) : (\r\n        <div className='center'>\r\n          Connect trackers on homepage to see your progression!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMetricsCard.propTypes = {\r\n  ratio: PropTypes.number,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default MetricsCard;\r\n","import React, { useContext } from 'react';\r\n\r\nimport StravaContext from '../../../context/strava/stravaContext';\r\nimport RunKeeperContext from '../../../context/runKeeper/runKeeperContext';\r\n\r\nimport MetricsCard from './MetricsCard';\r\n\r\nconst Dashboard = () => {\r\n\tconst { stravaData } = useContext(StravaContext);\r\n\tconst { runKeeperData } = useContext(RunKeeperContext);\r\n\r\n\tconst targetMetrics = {\r\n\t\ttargetWeight: 50,\r\n\t\ttargetCaloriesLost: 800\r\n\t};\r\n\r\n\tconst weightRatio =\r\n\t\tstravaData && stravaData.weight\r\n\t\t\t? Math.round((100 * targetMetrics.targetWeight) / stravaData.weight)\r\n\t\t\t: null;\r\n\r\n\tconst caloriesRatio =\r\n\t\trunKeeperData && runKeeperData.activities && runKeeperData.activities[1]\r\n\t\t\t? Math.round(\r\n\t\t\t\t(100 * runKeeperData.activities[1].calories) /\r\n\t\t\t\ttargetMetrics.targetCaloriesLost\r\n\t\t\t)\r\n\t\t\t: null;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2 className='center upper'>Dashboard</h2>\r\n\t\t\t<div className='grid'>\r\n\t\t\t\t{/* Weight */}\r\n\t\t\t\t<MetricsCard label='Weight loss progression' ratio={weightRatio} />\r\n\r\n\t\t\t\t{/* Calories */}\r\n\t\t\t\t<MetricsCard label='Calories burn progression' ratio={caloriesRatio} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport StravaContext from '../../context/strava/stravaContext';\r\nimport LoadingContext from '../../context/loading/loadingContext';\r\n\r\nconst stravaClientId = process.env.REACT_APP_STRAVA_CLIENT_ID;\r\nconst stravaClientSecret = process.env.REACT_APP_STRAVA_CLIENT_SECRET;\r\n\r\nconst StravaRedirect = ({ location, history }) => {\r\n  const { getStravaData } = useContext(StravaContext);\r\n  const { setLoading, stopLoading } = useContext(LoadingContext);\r\n\r\n  useEffect(() => {\r\n    // Get authorization code\r\n    const params = new URLSearchParams(location.search);\r\n    const authCode = params.get('code');\r\n\r\n    fetchData();\r\n    async function fetchData() {\r\n      // Set loading\r\n      setLoading();\r\n\r\n      // Get auth tokens\r\n      try {\r\n        const res = await axios.post(\r\n          `https://www.strava.com/oauth/token?client_id=${stravaClientId}&client_secret=${stravaClientSecret}&code=${authCode}&grant_type=authorization_code`\r\n        );\r\n\r\n        // Call context action to collect athlete data\r\n        getStravaData(res.data.access_token);\r\n\r\n        // Save refresh token to sessionStorage\r\n        sessionStorage.setItem('_strava_rt', res.data.refresh_token);\r\n      } catch (error) {\r\n        console.log('error fetching Strava outh tokens', error);\r\n      }\r\n\r\n      // Stop loading\r\n      stopLoading();\r\n\r\n      // Redirect to homepage\r\n      history.push('/');\r\n    }\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default StravaRedirect;\r\n","import React, { useContext, useEffect } from 'react';\r\n\r\nimport RunKeeperContext from '../../context/runKeeper/runKeeperContext';\r\n\r\nconst RunKeeperRedirect = ({ history }) => {\r\n  const { getRunKeeperData } = useContext(RunKeeperContext);\r\n\r\n  useEffect(() => {\r\n    getRunKeeperData();\r\n  });\r\n\r\n  // Redirect to homepage\r\n  history.push('/');\r\n\r\n  return <p>Loading ...</p>;\r\n};\r\n\r\nexport default RunKeeperRedirect;\r\n","import React from 'react';\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='center'>404 - page not found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport LoadingContext from './context/loading/loadingContext';\r\nimport StravaContext from './context/strava/stravaContext';\r\n\r\nimport Navbar from './components/layout/Navbar';\r\nimport Home from './components/pages/Home/Home';\r\nimport Dashboard from './components/pages/Dashboard/Dashboard';\r\nimport StravaRedirect from './components/pages/StravaRedirect';\r\nimport RunKeeperRedirect from './components/pages/RunKeeperRedirect';\r\nimport Page404 from './components/pages/Page404';\r\n\r\nimport './App.css';\r\n\r\nconst stravaClientId = process.env.REACT_APP_STRAVA_CLIENT_ID;\r\nconst stravaClientSecret = process.env.REACT_APP_STRAVA_CLIENT_SECRET;\r\n\r\nconst App = () => {\r\n\r\n\tconst { setLoading, stopLoading } = useContext(LoadingContext);\r\n\tconst { stravaData, getStravaData } = useContext(\r\n\t\tStravaContext\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Check session storage for Strava refresh tokens\r\n\t\tconst stravaRefreshToken = sessionStorage.getItem('_strava_rt');\r\n\r\n\t\tif (stravaRefreshToken && !stravaData) {\r\n\t\t\trefreshStravaAuth();\r\n\t\t\tsessionStorage.removeItem('_strava_rt');\r\n\t\t}\r\n\r\n\t\tasync function refreshStravaAuth() {\r\n\t\t\tsetLoading();\r\n\r\n\t\t\t// Get auth tokens\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.post(\r\n\t\t\t\t\t`https://www.strava.com/oauth/token?client_id=${stravaClientId}&client_secret=${stravaClientSecret}&refresh_token=${stravaRefreshToken}&grant_type=refresh_token`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsessionStorage.setItem('_strava_rt', res.data.refresh_token);\r\n\r\n\t\t\t\t// Call context action to get athlete data\r\n\t\t\t\tgetStravaData(res.data.access_token);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('error fetching Strava auth tokens');\r\n\t\t\t}\r\n\r\n\t\t\tstopLoading();\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Router basename={'/'}>\r\n\t\t\t<Navbar />\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{/* Home */}\r\n\t\t\t\t\t<Route exact path={`${process.env.PUBLIC_URL}/`} component={Home} />\r\n\r\n\t\t\t\t\t{/* Dashboard */}\r\n\t\t\t\t\t<Route exact path={`${process.env.PUBLIC_URL}/dashboard`} component={Dashboard} />\r\n\r\n\t\t\t\t\t{/* Strava apps redirect page */}\r\n\t\t\t\t\t<Route exact path={`${process.env.PUBLIC_URL}/strava-auth`} component={StravaRedirect} />\r\n\r\n\t\t\t\t\t{/* Runkeeper apps redirect page */}\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={`${process.env.PUBLIC_URL}/runkeeper-auth`}\r\n\t\t\t\t\t\tcomponent={RunKeeperRedirect}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* 404 */}\r\n\t\t\t\t\t<Route component={Page404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { SET_LOADING, STOP_LOADING } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_STRAVA_DATA = 'GET_STRAVA_DATA';\r\nexport const CLEAR_STRAVA_DATA = 'CLEAR_STRAVA_DATA';\r\n\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const STOP_LOADING = 'STOP_LOADING';\r\n\r\nexport const GET_RUNKEEPER_DATA = 'GET_RUNKEEPER_DATA';\r\nexport const CLEAR_RUNKEEPER_DATA = 'CLEAR_RUNKEEPER_DATA';\r\n","import React, { useReducer } from 'react';\r\nimport LoadingReducer from './loadingReducer';\r\nimport LoadingContext from './loadingContext';\r\nimport { SET_LOADING, STOP_LOADING } from '../types';\r\n\r\nconst LoadingState = props => {\r\n  const initialState = {\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(LoadingReducer, initialState);\r\n\r\n  // Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  // Stop loading\r\n  const stopLoading = () => dispatch({ type: STOP_LOADING });\r\n\r\n  return (\r\n    <LoadingContext.Provider\r\n      value={{\r\n        loading: state.loading,\r\n        setLoading,\r\n        stopLoading\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LoadingContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LoadingState;\r\n","import { CLEAR_STRAVA_DATA, GET_STRAVA_DATA } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_STRAVA_DATA:\r\n      return {\r\n        ...state,\r\n        stravaData: action.payload\r\n      };\r\n    case CLEAR_STRAVA_DATA:\r\n      return {\r\n        ...state,\r\n        stravaData: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport LoadingContext from '../loading/loadingContext';\r\nimport StravaReducer from './stravaReducer';\r\nimport StravaContext from './stravaContext';\r\nimport { GET_STRAVA_DATA, CLEAR_STRAVA_DATA } from '../types';\r\n\r\nconst stravaClientId = process.env.REACT_APP_STRAVA_CLIENT_ID;\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst StravaState = props => {\r\n\tconst { setLoading, stopLoading } = useContext(LoadingContext);\r\n\r\n\tconst initialState = {\r\n\t\tstravaData: null\r\n\t};\r\n\r\n\tconst [state, dispatch] = useReducer(StravaReducer, initialState);\r\n\r\n\t// Authorize app to make API calls for strava user\r\n\t// User is redirected to /strava-auth after authorization\r\n\tconst authStrava = () => {\r\n\t\twindow.location.href = `https://www.strava.com/oauth/authorize?client_id=${stravaClientId}&redirect_uri=${baseUrl}%2F%23%2Fhealth-tracker/strava-auth&response_type=code&scope=profile:read_all`;\r\n\t};\r\n\r\n\t// Get athlete data\r\n\tconst getStravaData = async access_token => {\r\n\t\tsetLoading();\r\n\r\n\t\ttry {\r\n\t\t\tconst dataRes = await axios.get(`https://www.strava.com/api/v3/athlete`, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${access_token}`\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_STRAVA_DATA,\r\n\t\t\t\tpayload: dataRes.data\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('error fetching Strava athlete data', error);\r\n\t\t}\r\n\r\n\t\tstopLoading();\r\n\t};\r\n\r\n\t// Clear strava data\r\n\tconst clearStravaData = () => {\r\n\t\tsessionStorage.removeItem('_strava_rt');\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: CLEAR_STRAVA_DATA\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StravaContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tstravaData: state.stravaData,\r\n\t\t\t\tauthStrava,\r\n\t\t\t\tgetStravaData,\r\n\t\t\t\tclearStravaData\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</StravaContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default StravaState;\r\n","import { GET_RUNKEEPER_DATA, CLEAR_RUNKEEPER_DATA } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_RUNKEEPER_DATA:\r\n      return {\r\n        ...state,\r\n        runKeeperData: action.payload\r\n      };\r\n    case CLEAR_RUNKEEPER_DATA:\r\n      return {\r\n        ...state,\r\n        runKeeperData: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport LoadingContext from '../loading/loadingContext';\r\nimport RunKeeperReducer from './runKeeperReducer';\r\nimport RunKeeperContext from './runKeeperContext';\r\nimport { GET_RUNKEEPER_DATA, CLEAR_RUNKEEPER_DATA } from '../types';\r\n\r\nconst runKeeperAccessToken = process.env.REACT_APP_RUNKEEPER_ACCESS_TOKEN;\r\n\r\nconst RunKeeperState = props => {\r\n  const { setLoading, stopLoading } = useContext(LoadingContext);\r\n\r\n  const initialState = {\r\n    runKeeperData: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(RunKeeperReducer, initialState);\r\n\r\n  const authRunKeeper = async () => {\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `https://platform.gethealth.io/v1/health/user/devices/?access_token=${runKeeperAccessToken}`\r\n      );\r\n\r\n      const data = res.data.devices.filter(\r\n        device => device.name === 'runkeeper'\r\n      )[0];\r\n      const connect_url = data.connect_url;\r\n\r\n      // Go to authorization page\r\n      window.location.href = connect_url;\r\n    } catch (error) {\r\n      console.log('error authorizing Runkeeper', error);\r\n    }\r\n\r\n    stopLoading();\r\n  };\r\n\r\n  const getRunKeeperData = async () => {\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `https://platform.gethealth.io/v1/health/user/activities/?access_token=${runKeeperAccessToken}`\r\n      );\r\n\r\n      dispatch({\r\n        type: GET_RUNKEEPER_DATA,\r\n        payload: res.data\r\n      });\r\n    } catch (error) {\r\n      console.log('error fetching Runkeeper data', error);\r\n    }\r\n\r\n    stopLoading();\r\n  };\r\n\r\n  const clearRunKeeperData = () => {\r\n    dispatch({ type: CLEAR_RUNKEEPER_DATA });\r\n  };\r\n\r\n  return (\r\n    <RunKeeperContext.Provider\r\n      value={{\r\n        runKeeperData: state.runKeeperData,\r\n        authRunKeeper,\r\n        getRunKeeperData,\r\n        clearRunKeeperData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RunKeeperContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RunKeeperState;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nimport LoadingState from './context/loading/LoadingState';\r\nimport StravaState from './context/strava/StravaState';\r\nimport RunKeeperState from './context/runKeeper/RunKeeperState';\r\n\r\n\r\nReactDOM.render(\r\n\t<LoadingState>\r\n\t\t<StravaState>\r\n\t\t\t<RunKeeperState><App />\r\n\t\t\t</RunKeeperState>\r\n\t\t</StravaState>\r\n\t</LoadingState>, document.getElementById('root'));\r\n"],"sourceRoot":""}